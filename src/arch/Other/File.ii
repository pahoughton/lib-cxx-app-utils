#ifndef _File_ii_
#define _File_ii_
//
// File:        File.ii
// Desc:        
//
//  	inlines for File
//
// Author:      Paul Houghton - (paul_houghton@wiltel.com)
// Created:     08/02/95 04:58
//
// Revision History:
//
// $Log$
// Revision 4.1  1997/09/17 15:13:23  houghton
// Changed to Version 4
//
// Revision 3.1  1996/11/14 01:25:21  houghton
// Changed to Release 3
//
// Revision 2.1  1995/11/10 12:47:09  houghton
// Change to Version 2
//
// Revision 1.1  1995/11/05  13:12:39  houghton
// Initial implementation of File Class
//
//

#ifndef inline
#include <unistd.h>
#include <fcntl.h>
#include <cerrno>
#endif

inline
streampos
File::seekoff( streamoff offset, ios::seek_dir dir )
{
  return( seek( dir, offset ) );
}

inline
streampos
File::seekpos( streampos pos )
{
  return( seek( ios::beg, pos ) );
}

inline
streampos
File::seek( long pos )
{
  return( seek( ios::beg, pos ) );
}

inline
File &
File::read( void * dest, size_t amount, streampos pos )
{
  seek( pos );
  return( read( dest, amount ) );
}

inline
File &
File::read( void * dest, size_t amount, ios::seek_dir dir, streamoff offset )
{
  seek( dir, offset );
  return( read( dest, amount ) );
}

inline
int
File::gcount( void ) const
{
  return( bytesRead );
}

inline
File &
File::write( const void * dest, size_t amount, streampos pos )
{
  seek( pos );
  return( write( dest, amount ) );
}

inline
File &
File::write(
  const void  * dest,
  size_t	amount,
  ios::seek_dir dir,
  streamoff	offset )
{
  seek( dir, offset );
  return( write( dest, amount ) );
}

inline
int
File::rdstate( void ) const
{
  return( state );
}

inline
bool
File::eof( void ) const
{
  return( state & ios::eofbit );
}

inline
bool
File::bad( void ) const
{
  return( state & ios::badbit );
}

inline
bool
File::fail( void ) const
{
  return( state & (ios::failbit | ios::badbit) );
}

inline
int
File::errno( void ) const
{
  return( osErrno );
}

inline
File::File( void )
{
  bytesRead = 0;
  state = ios::badbit;
  osErrno = ENOENT;
}

inline
int
File::whence( ios::seek_dir dir ) const
{
  return( dir == ios::beg ? SEEK_SET :
	  dir == ios::cur ? SEEK_CUR : SEEK_END );
}

    


  
#endif // ! def _File_ii_ 
