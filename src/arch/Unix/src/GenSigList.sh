#!/bin/sh
#
# Title:        GenSigList.sh
# Project:	StlUtils ()
# Desc:
# 
#   Generate SignalStrings source from system signal header file.
# 
# Notes:
# 
# Author:	Paul A. Houghton - (paul.houghton@mci.com)
# Created:	08/05/97 07:15
#
# Revision History: (See end of file for Revision Log)
#
#   $Author$ 
#   $Date$ 
#   $Name$ 
#   $Revision$ 
#   $State$ 
# 
#  $Id$ 
# 

echo Generating SingalStrings into $2

cat > $2 <<'EOS'
#if !defined( _GENSIGLIST_ )
#define _GENSIGLIST_
/*
 * 
 * This file was generated by 'GenSigList.sh' version $Revision$
 *
 * DO NOT MODIFY
 *
 */

static const char * SignalStrings[] =
{
EOS

CC=$1

echo '#include <signal.h>' > /tmp/sigs$$.c

hdrs=`$CC -E /tmp/sigs$$.c | grep '[ 	]*#' | sed -n -e '/#ident/d' -e 's@.*"\(.*/.*\)".*@\1@' -e '/\//p' | grep -v "/tmp/sigs$$.c" | sort | uniq`

rm /tmp/sigs$$.c

rm sig.lst 2> /dev/null


for hdr in $hdrs ; do
  # echo -- Checking $hdr for sigs
  grep '^[ 	]*#[ 	]*define[ 	]*SIG[A-Z][A-Z0-9]*[ 	][ 	]*[0-9][0-9]*' $hdr | sed -e 's/.*\(SIG[^ 	]*\)[ 	][ 	]*\([0-9][0-9]*\).*/\2 \1/' | sort -n >> sig.lst
  # cat sig.lst
done


echo Found `wc -l sig.lst | sed -e 's/[^0-9]*\([0-9][0-9]*\)[^0-9]*/\1/'` signals.

cat >sig.awk <<'EOP'
BEGIN { maxsig = 0 }
NF == 2 {
  if( $1 > maxsig) { maxsig = $1 }
  sig_name[$1] = $2
  }
END {
  if( maxsig > 100 ) { maxsig = 100 }
  for( n = 0; n <= maxsig; n++ ) {
    if( sig_name[n]) {
      printf( "  \"%s\",\n", sig_name[n] )
    }
    else {
      printf( "  \"SIGNUM_%d\",\n", n )
    }
  }
  printf( "  \"SIG_unknown\"\n" )
}
EOP

# cat sig.lst

awk -f sig.awk < sig.lst >> $2

cat >> $2 <<'EOS'
};
#endif /* ! def _GENSIGLIST_ */
EOS


# Local Variables:
# mode:ksh
# End:
