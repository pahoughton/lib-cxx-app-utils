#ifndef _SigCatcher_ii_
#define _SigCatcher_ii_
//
// File:        SigCatcher.ii
// Project:	StlUtils ()
// Desc:        
//
//  	Inline source for SigCatcher
//
// Author:      Paul A. Houghton - (paul.houghton@mci.com)
// Created:     04/14/97 07:12
//
// Revision History: (See end of file for Revision Log)
//
//  $Author$ 
//  $Date$ 
//  $Name$ 
//  $Revision$ 
//  $State$ 
//
//  $Id$ 
//


#if defined( STLUTILS_DEBUG )
#define inline
#endif

inline
SigCatcher::Caught::Caught( void )
  : sigCaught( 0 ),
    whenCaught( 0 )
{
}

inline
SigCatcher::Caught::Caught( SigCatcher::Signal caughtSig, time_t timeCaught )
  : sigCaught( caughtSig ),
    whenCaught( timeCaught )
{
}

inline
SigCatcher::Signal
SigCatcher::Caught::sig( void ) const
{
  return( sigCaught );
}

inline
time_t
SigCatcher::Caught::when( void ) const
{
  return( whenCaught );
}

inline
bool
SigCatcher::Caught::operator == ( const Caught & rhs ) const
{
  return( sigCaught == rhs.sigCaught && whenCaught == rhs.whenCaught );
}

inline
SigCatcher::CaughtQueue &
SigCatcher::caught( void )
{
  return( caughtSigList );
}

inline
const SigCatcher::CaughtQueue &
SigCatcher::caught( void ) const
{
  return( caughtSigList );
}

inline
bool
SigCatcher::caught( Signal sig ) const
{
  for( CaughtQueue::const_iterator them = caughtSigList.begin();
       them != caughtSigList.end();
       ++ them )
    {
      if( (*them).sig() == sig )
	return( true );
    }
  return( false );
}

inline
bool
SigCatcher::catchSig( Signal sig )
{
  return( catchSig( sig, None ) );
}

inline
bool
SigCatcher::setError(
  ErrorNum	err,
  Signal	errSig,
  int		osErr
  )
{
  errorNum = err;
  errorSig = errSig;
  osErrno = osErr;
  return( good() );
}


#if defined( inline )
#undef inline
#endif

// Revision Log:
// 
// 
// %PL%
// 
// $Log$
// Revision 6.1  2003/08/09 11:22:47  houghton
// Changed to version 6
//
// Revision 5.3  2003/08/09 11:21:01  houghton
// Changed ver strings.
//
// Revision 5.2  2001/07/26 19:28:57  houghton
// *** empty log message ***
//
// Revision 5.1  2000/05/25 10:33:23  houghton
// Changed Version Num to 5
//
// Revision 4.3  1998/03/30 14:08:25  houghton
// Renamed signal variable to sigCaught to avoid name clashes with the
//     'signal' function.
//
// Revision 4.2  1998/02/02 15:32:07  houghton
// Added support for specifying singal flags.
//
// Revision 4.1  1997/09/17 15:13:37  houghton
// Changed to Version 4
//
// Revision 3.4  1997/09/17 11:09:24  houghton
// Changed: renamed library to StlUtils.
//
// Revision 3.3  1997/07/25 12:18:45  houghton
// Added caught() const method.
//
// Revision 3.2  1997/04/21 09:58:29  houghton
// Added destructor.
//
// Revision 3.1  1997/04/19 09:53:04  houghton
// Initial Version.
//
//
#endif // ! def _SigCatcher_ii_ 
