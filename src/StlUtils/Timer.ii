#ifndef _Timer_ii_
#define _Timer_ii_
//
// File:        Timer.ii
// Desc:        
//
//  	inlines for Timer
//
// Author:      Paul Houghton - (paul_houghton@wiltel.com)
// Created:     07/28/95 06:56
//
// Revision History:
//
// $Log$
// Revision 2.3  1996/04/27 13:12:56  houghton
// Bug-Fix: if inline gets defined at the top, it needs to be undef at
//   at the bottom.
//
// Revision 2.2  1995/12/04 11:18:31  houghton
// Bug Fix - Can now compile with out '-DCLUE_DEBUG'.
//
// Revision 2.1  1995/11/10  12:41:20  houghton
// Change to Version 2
//
// Revision 1.2  1995/11/05  15:28:51  houghton
// Revised
//
//

#if !defined( CLUE_SHORT_FN )
#include "DateTimeUtils.hh"
#include <iomanip>
#else
#include <DtTmUtil.hh>
#include <iomanip>
#endif

#if defined( CLUE_DEBUG )
#define inline
#endif

inline
Timer::Timer( time_t startTime )
{
  startSec = (startTime ? startTime : time(0) );
  stopSec = 0;
}

inline
time_t
Timer::start( time_t startTime )
{
  time_t old = startSec;
  
  if( startTime == 0 )
    {
      startSec = time(0);
    }
  else
    {
      startSec = startTime;
    }
  return( old );
}

inline
time_t
Timer::stop( time_t stopTime )
{
  time_t old = stopSec;
  
  if( stopTime == 0 )
    {
      stopSec = time(0);
    }
  else
    {
      stopSec = stopTime;
    }

  return( old );
}

inline
time_t
Timer::getDur( void ) const
{
  return( stopSec - startSec );
}

inline
time_t
Timer::getStart( void ) const
{
  return( startSec );
}


inline
time_t
Timer::getStop( void ) const
{
  return( stopSec );
}


inline
ostream &
operator<<( ostream & dest, const Timer & timer )
{
  return( timer.toStream( dest ) );
}




#if defined( inline )
#undef inline
#endif

#endif // ! def _Timer_ii_ 
